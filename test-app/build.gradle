plugins {
    id 'org.springframework.boot' version '3.2.1'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.openapi.generator' version '7.14.0'
    id 'com.guidedbyte.openapi-modelgen' version '1.0.4'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    
    // OpenAPI/Swagger annotations
    implementation 'io.swagger.core.v3:swagger-annotations:2.2.19'
    
    // JSR-305 annotations (for @Nullable, @Nonnull in generated code)
    compileOnly 'com.google.code.findbugs:jsr305:3.0.2'

    compileOnly("org.projectlombok:lombok:1.18.38")
    annotationProcessor("org.projectlombok:lombok:1.18.38")

    // Jackson for JSON processing
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    testCompileOnly("org.projectlombok:lombok:1.18.38")
    testAnnotationProcessor("org.projectlombok:lombok:1.18.38")
}

// Configure our custom plugin
openapiModelgen {
    defaults {
        templateDir "src/main/templates/custom" // Trigger use of plugin templates
        templateVariables([
                header: "Copyright (c) {{currentYear}} GuidedByte Technologies Inc."
        ])
    }
    specs {
        pets {
            inputSpec "$projectDir/src/main/resources/openapi/pets.yaml"
            modelPackage "com.guidedbyte.testapp.model.pets"
        }
        
        orders {
            inputSpec "$projectDir/src/main/resources/openapi/orders.yaml"
            modelPackage "com.guidedbyte.testapp.model.orders"
            // Override suffix for orders to demonstrate per-spec config
            modelNameSuffix "Entity"
        }
    }
}

// Add generated sources to compilation
sourceSets {
    main {
        java {
            srcDirs += file("$buildDir/generated/sources/openapi/src/main/java")
        }
    }
}

tasks.register('listPluginVersions') {
    doLast {
        println "Applied Gradle Plugin Versions:"
        project.plugins.each { plugin ->
            def pluginClass = plugin.class
            def pluginName = pluginClass.simpleName
            def version = "Unknown"

            // Attempt to find version information from the plugin's JAR
            def jarFile = pluginClass.protectionDomain?.codeSource?.location?.file
            if (jarFile) {
                def matcher = (jarFile =~ /-(\d+\.\d+(\.\d+)?(-\w+)?)\.jar$/) // Matches versions like 1.0, 1.2.3, 1.0-SNAPSHOT
                if (matcher.find()) {
                    version = matcher.group(1)
                }
            }
            println "  - $pluginName: $version"
        }
    }
}

// Ensure DTOs are generated before compilation
afterEvaluate {
    compileJava.dependsOn generateAllModels
}