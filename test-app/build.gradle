plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.1'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.openapi.generator' version '7.14.0'
    id 'com.guidedbyte.openapi-modelgen'
}

repositories {
    mavenCentral()
    gradlePluginPortal()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    
    // OpenAPI/Swagger v3 annotations (includes @Schema)
    implementation 'io.swagger.core.v3:swagger-annotations:2.2.19'
    
    // JSR-305 annotations (for @Nullable, @Nonnull in generated code)
    compileOnly 'com.google.code.findbugs:jsr305:3.0.2'

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.38'
    annotationProcessor 'org.projectlombok:lombok:1.18.38'

    // Jakarta Bean Validation API (for @Valid, @NotNull, etc.)
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
    
    // Hibernate Validator (implementation of Jakarta Bean Validation)
    implementation 'org.hibernate.validator:hibernate-validator:8.0.1.Final'
    
    // Spring Nullable annotations
    implementation 'org.springframework:spring-core:6.0.10'
    
    // Jakarta Annotations (for @Generated)
    compileOnly 'jakarta.annotation:jakarta.annotation-api:2.1.1'

    // Jackson for JSON processing (usually included with Spring Boot Web)
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    
    // OpenAPI Generator dependency for plugin  
    implementation 'org.openapitools:openapi-generator:7.14.0'
    
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testCompileOnly 'org.projectlombok:lombok:1.18.38'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.38'
}

// Configure our custom plugin
openapiModelgen {
    defaults {
        templateDir "src/main/templates" // Use explicit user templates
        templateCustomizationsDir "src/main/templateCustomizations" // Use user YAML customizations
        modelNamePrefix "Api" // Add prefix to test the new feature
        templateSources([
            'user-templates',           // Use explicit user templates first
            'user-customizations',      // Then user YAML customizations
            // Exclude 'plugin-customizations' to test user precedence
            'openapi-generator'         // Fallback to OpenAPI Generator defaults
        ])
        
        templateVariables([
                header: "Copyright (c) {{currentYear}} GuidedByte Technologies Inc."
        ])
        // NOTE: importMappings and typeMappings commented out due to OpenAPI Generator bug
        // When using modelNamePrefix/Suffix, these mappings don't work correctly
        // See: https://github.com/OpenAPITools/openapi-generator/issues/19043
        // importMappings([
        //     'UUID': 'java.util.UUID',
        //     'LocalDate': 'java.time.LocalDate',
        //     'LocalDateTime': 'java.time.LocalDateTime',
        //     'BigDecimal': 'java.math.BigDecimal'
        // ])
        // typeMappings([
        //     'string+uuid': 'UUID',
        //     'string+date': 'LocalDate',
        //     'string+date-time': 'LocalDateTime'
        // ])
        additionalProperties([
            'library': 'spring-boot',
            'beanValidations': 'true',
            'performBeanValidation': 'true',
            'useSpringBoot3': 'true'
        ])
        validateSpec false
        configOptions([
            additionalModelTypeAnnotations: "@lombok.Data;@lombok.experimental.Accessors(fluent = true);@lombok.experimental.SuperBuilder;@lombok.NoArgsConstructor(force = true);@lombok.AllArgsConstructor"
        ])
    }
    specs {
        pets {
            inputSpec "$projectDir/src/main/resources/openapi/pets.yaml"
            modelPackage "com.guidedbyte.testapp.model.pets"
        }
        
        orders {
            inputSpec "$projectDir/src/main/resources/openapi/orders.yaml"
            modelPackage "com.guidedbyte.testapp.model.orders"
            modelNamePrefix "Custom" // Override default prefix for orders
            modelNameSuffix "Entity" // Override suffix for orders to demonstrate per-spec config
            // NOTE: importMappings and typeMappings commented out due to OpenAPI Generator bug
            // When using modelNamePrefix/Suffix, these mappings don't work correctly
            // importMappings([
            //     'Instant': 'java.time.Instant'  // Additional import for orders only
            // ])
            // typeMappings([
            //     'string+date-time': 'Instant'   // Override default mapping for orders
            // ])
            additionalProperties([
                'reactive': 'false',            // Override reactive setting for orders
                'enablePostProcessFile': 'true' // Orders-specific additional property
            ])
        }
    }
}

// Add generated sources to compilation
sourceSets {
    main {
        java {
            srcDirs += file("${layout.buildDirectory.get()}/generated/sources/openapi/src/main/java")
        }
    }
}

tasks.register('listPluginVersions') {
    doLast {
        println "Applied Gradle Plugin Versions:"
        project.plugins.each { plugin ->
            def pluginClass = plugin.class
            def pluginName = pluginClass.simpleName
            def version = "Unknown"

            // Attempt to find version information from the plugin's JAR
            def jarFile = pluginClass.protectionDomain?.codeSource?.location?.file
            if (jarFile) {
                def matcher = (jarFile =~ /-(\d+\.\d+(\.\d+)?(-\w+)?)\.jar$/) // Matches versions like 1.0, 1.2.3, 1.0-SNAPSHOT
                if (matcher.find()) {
                    version = matcher.group(1)
                }
            }
            println "  - $pluginName: $version"
        }
    }
}

// Ensure DTOs are generated before compilation
afterEvaluate {
    compileJava.dependsOn generateAllModels
}