name: Security

on:
  schedule:
    # Run weekly security scans
    - cron: '0 0 * * 1'  # Every Monday at midnight UTC
  workflow_dispatch:  # Allow manual trigger

permissions:
  contents: read
  security-events: write

jobs:
  dependency-review:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Dependency Review
        uses: actions/dependency-review-action@v4

  security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Run OWASP Dependency Check
        run: |
          ./gradlew plugin:dependencyCheckAnalyze --no-daemon
        continue-on-error: true

      - name: Upload OWASP report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: owasp-dependency-check-report
          path: plugin/build/reports/dependency-check/

      - name: CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          languages: java
          
  update-actions:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update GitHub Actions versions
        run: |
          # Find all workflow files
          find .github/workflows -name "*.yml" -o -name "*.yaml" | while read file; do
            echo "Checking $file for outdated actions..."
            
            # Check for common actions and suggest updates
            if grep -q "actions/checkout@v3" "$file"; then
              echo "üìù Found outdated actions/checkout@v3 in $file"
              sed -i 's/actions\/checkout@v3/actions\/checkout@v4/g' "$file"
            fi
            
            if grep -q "actions/setup-java@v3" "$file"; then
              echo "üìù Found outdated actions/setup-java@v3 in $file"
              sed -i 's/actions\/setup-java@v3/actions\/setup-java@v4/g' "$file"
            fi
            
            if grep -q "gradle/actions/setup-gradle@v2" "$file"; then
              echo "üìù Found outdated gradle/actions/setup-gradle@v2 in $file"
              sed -i 's/gradle\/actions\/setup-gradle@v2/gradle\/actions\/setup-gradle@v3/g' "$file"
            fi
          done

      - name: Create PR for action updates
        run: |
          if git diff --quiet; then
            echo "No action updates needed"
            exit 0
          fi
          
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          BRANCH_NAME="security/update-github-actions-$(date +%Y%m%d)"
          git checkout -b "$BRANCH_NAME"
          git add .github/workflows/
          git commit -m "security: update GitHub Actions to latest versions"
          git push origin "$BRANCH_NAME"
          
          # Create PR (requires GitHub CLI or API call)
          echo "Created branch $BRANCH_NAME with action updates"